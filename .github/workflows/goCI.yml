name: CI setup for Go #Name the workflow
on: #on event keyword
  push:
    branches: [main] #identify branch
    
jobs: #job to execute on event
  my-job:
    name: My Job
    runs-on: ubuntu-16.04 #specify OS for virtual machine
    steps:
    - name: Print a greeting
      run: |
        ls
        echo Hello There! #run terminal command
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        # The Go version to download (if necessary) and use. Supports semver spec and ranges.
        go-version: 1.16.5 # optional
    - name: Show Go version # verify that Go is installed
      run: |
        go version # show Go version
        
    - name: Checkout our code #pull repo code to virtual env
      uses: actions/checkout@v2
      
    - name: Check file system #check virtual env has pulled file
      run: |
        ls
        cat calc.go #print content of calc.go
        
    - name: Check out private repo remotely
      uses: actions/checkout@v2
      with:
        repository: lowkh2/GoSchoolRemoteExample #private repo
        path: virtualRepoFolder #folder created in virtual env
        token: ${{ secrets.GO_SECRET }} #password to enter remote hidden repo
        
    - name: Show hidden files
      run: |
        cd virtualRepoFolder
        ls
        cat myText.txt
        cd ..
        
    - name: Install dependencies for Go
      run: |
        go mod init GoCICDDemo
        go mod tidy
        go get github.com/tebeka/go2xunit
        go test -v
        go test -v | go2xunit > report.xml # generate xml report of test results
        ls #confirm report.xml is generated

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1 #checkout unit test reporting
      if: always() #always do it
      with:
        files: report.xml #with the file created in the reporting

    - if: ${{ success() }}
      name: Create Report File Upload Directory
      run: |
        mkdir upload
        
    - name: Prepare documents
      run: |
        mv report.xml ./upload
        
    - name: Prepare artifact
      uses: actions/upload-artifact@v2
      with:
        name: assetDocuments
        path: upload
        
    - name: Download content
      uses: actions/download-artifact@v2
      with:
        name: assetDocuments
    
    - if: ${{ failure() }}
      name: Create Issues Notification
      uses: nashmaniac/create-issue-action@v1.1
      with:
        title: Build Failed
        token: ${{secrets.GITHUB_TOKEN}}
        assignees: ${{github.actor}}
        labels: workflow-failed
        body: Workflow failed for commit ${{github.sha}}
      
    
